#Script to download SST from CFSv2 from IRI data library in CPT format
#Created by: Lizeth Llanos and Diego Agudelo
#Date: February 2018
options(timeout=180)
if(require(stringr)==FALSE){install.packages("stringr",dependencies = TRUE)}
library("stringr")
if(require(R.utils)==FALSE){install.packages("R.utils",dependencies = TRUE)}
library(R.utils)
download_ERSST_CPT=function(firs_year,last_year,i_month,l_season,dir_save,m_for,l_for,area1){
trimestrel <- i_month:(i_month+l_season-1)
fores <- m_for:(m_for+l_for-1)
if(sum(fores>12)>0)fores[which(fores>12)]=fores[which(fores>12)]-12
if(sum(trimestrel>12)>0)trimestrel[which(trimestrel>12)]=trimestrel[which(trimestrel>12)]-12
route <- paste0("http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/.version4/.sst/T/%28", month.abb[trimestrel[1]] ,"%20", firs_year ,"%29%28",  month.abb[trimestrel[l_season]] ,"%20", last_year ,"%29RANGEEDGES/T/", l_season ,"/boxAverage/T/12/STEP/Y/%28",area1[4],"%29%28",area1[3],"%29RANGEEDGES/X/%28",area1[1],"%29%28",area1[2],"%29RANGEEDGES/-999/setmissing_value/Y/high/low/RANGE/%5BX/Y%5D%5BT%5Dcptv10.tsv.gz")
path_save <- paste0(dir_save,"/",paste(month.abb[fores],collapse = "-"),"_",paste(month.abb[trimestrel],collapse = "-"),".tsv.gz")
download.file(route,path_save)
gunzip(path_save)
return("Successful download")
}
########## Descarga ERRST ##########
for(i in 2009:2018){
main_dir <- "D:/descarga" # Modifique esta línea de acuerdo a su directorio de trabajo
nom_c <- i # Modifique esta línea con el nombre que desee
dir.create(paste0(main_dir,"/",  nom_c,"/input/sst_ersst"), recursive = T)
dir.create(paste0(main_dir,"/", nom_c,"/input/stations"), recursive = T)
dir_save <- paste0(main_dir,"/", nom_c,"/input/sst_ersst")
area1 <- list(c(0,359,-30,30)) #xmin, xmax, ymin, ymax
i_month <- c(9,11,1,12,3,4) #First month to download
l_season <-c(1,1,3,1,1,3) #Length season (1, 2, 3. meses)
m_for <- c(1,1,1,4,4,4) #Month to forecast
l_for <- c(3,3,3,3,3,3) #Length forescast
firs_year <- 1981 #Initial year
last_year <- i+1 #Last year
Map(download_ERSST_CPT,firs_year,last_year,i_month ,l_season ,dir_save,m_for,l_for,area1)
}
203000-139000
for(i in 2009:2018){
main_dir <- "D:/descarga" # Modifique esta línea de acuerdo a su directorio de trabajo
nom_c <- i # Modifique esta línea con el nombre que desee
dir.create(paste0(main_dir,"/",  nom_c,"/input/sst_ersst"), recursive = T)
dir.create(paste0(main_dir,"/", nom_c,"/input/stations"), recursive = T)
dir_save <- paste0(main_dir,"/", nom_c,"/input/sst_ersst")
area1 <- list(c(130,340,-20,35)) #xmin, xmax, ymin, ymax
i_month <- c(9,11,1,12,3,4) #First month to download
l_season <-c(1,1,3,1,1,3) #Length season (1, 2, 3. meses)
m_for <- c(1,1,1,4,4,4) #Month to forecast
l_for <- c(3,3,3,3,3,3) #Length forescast
firs_year <- 1981 #Initial year
last_year <- i+1 #Last year
Map(download_ERSST_CPT,firs_year,last_year,i_month ,l_season ,dir_save,m_for,l_for,area1)
}
#Script to download SST from CFSv2 from IRI data library in CPT format
#Created by: Lizeth Llanos and Diego Agudelo
#Date: February 2018
options(timeout=180)
if(require(stringr)==FALSE){install.packages("stringr",dependencies = TRUE)}
library("stringr")
if(require(R.utils)==FALSE){install.packages("R.utils",dependencies = TRUE)}
library(R.utils)
# Función para descargar una área de la TSM del modelo CFSv2 --------------
download_CFSV2_CPT_1=function(firs_year,last_year,i_month,ic,dir_save,area1, lg){
lg_s <- lg -1
lead <- i_month-ic
if(lead<0)lead <- lead + 12
route <- paste0("http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP/.EMC/.CFSv2/.ENSEMBLE/.OCNF/.surface/.TMP/SOURCES/.NOAA/.NCEP/.EMC/.CFSv2/.REALTIME_ENSEMBLE/.OCNF/.surface/.TMP/appendstream/350/maskge/S/%280000%201%20",month.abb[ic],"%20",firs_year,"-",last_year,"%29VALUES/L/",lead,".5/",lead+lg_s,".5/RANGE%5BL%5D//keepgrids/average/M/1/24/RANGE%5BM%5Daverage/Y/%28",area1[4],"%29%28",area1[3],"%29RANGEEDGES/X/%28",area1[1],"%29%28",area1[2],"%29RANGEEDGES/-999/setmissing_value/%5BX/Y%5D%5BS/L/add%5Dcptv10.tsv.gz")
print(route)
trimestrel <- (ic+lead):(ic+lead+lg_s)
if(sum(trimestrel>12)>0)trimestrel[which(trimestrel>12)]=trimestrel[which(trimestrel>12)]-12
path_save <- paste0(dir_save,"/",month.abb[ic],"_",paste(month.abb[trimestrel],collapse = "-"),".tsv.gz")
download.file(route,path_save)
gunzip(path_save)
return(paste("Successful download",path_save))
}
download_ERSST_CPT=function(firs_year,last_year,i_month,l_season,dir_save,m_for,l_for,area1){
trimestrel <- i_month:(i_month+l_season-1)
fores <- m_for:(m_for+l_for-1)
if(sum(fores>12)>0)fores[which(fores>12)]=fores[which(fores>12)]-12
if(sum(trimestrel>12)>0)trimestrel[which(trimestrel>12)]=trimestrel[which(trimestrel>12)]-12
route <- paste0("http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/.version4/.sst/T/%28", month.abb[trimestrel[1]] ,"%20", firs_year ,"%29%28",  month.abb[trimestrel[l_season]] ,"%20", last_year ,"%29RANGEEDGES/T/", l_season ,"/boxAverage/T/12/STEP/Y/%28",area1[4],"%29%28",area1[3],"%29RANGEEDGES/X/%28",area1[1],"%29%28",area1[2],"%29RANGEEDGES/-999/setmissing_value/Y/high/low/RANGE/%5BX/Y%5D%5BT%5Dcptv10.tsv.gz")
path_save <- paste0(dir_save,"/",paste(month.abb[fores],collapse = "-"),"_",paste(month.abb[trimestrel],collapse = "-"),".tsv.gz")
download.file(route,path_save)
gunzip(path_save)
return("Successful download")
}
for(i in 2009:2018){
main_dir <- "D:/descarga" # Modifique esta línea de acuerdo a su directorio de trabajo
nom_c <- i # Modifique esta línea con el nombre que desee
dir.create(paste0(main_dir,"/",  nom_c,"/input/sst_ersst"), recursive = T)
dir.create(paste0(main_dir,"/", nom_c,"/input/stations"), recursive = T)
dir_save <- paste0(main_dir,"/", nom_c,"/input/sst_ersst")
area1 <- list(c(130,340,-20,35)) #xmin, xmax, ymin, ymax
i_month <- c(9,12,1,12,3,4) #First month to download
l_season <-c(1,1,3,1,1,3) #Length season (1, 2, 3. meses)
m_for <- c(1,1,1,4,4,4) #Month to forecast
l_for <- c(3,3,3,3,3,3) #Length forescast
firs_year <- 1981 #Initial year
last_year <- i+1 #Last year
Map(download_ERSST_CPT,firs_year,last_year,i_month ,l_season ,dir_save,m_for,l_for,area1)
}
for(i in 2009:2018){
main_dir <- "D:/descarga" # Modifique esta línea de acuerdo a su directorio de trabajo
nom_c <- i # Modifique esta línea con el nombre que desee
dir.create(paste0(main_dir,"/",  nom_c,"/input/sst_ersst"), recursive = T)
dir.create(paste0(main_dir,"/", nom_c,"/input/stations"), recursive = T)
dir_save <- paste0(main_dir,"/", nom_c,"/input/sst_ersst")
area1 <- list(c(0,359,-30,30)) #xmin, xmax, ymin, ymax
i_month <- c(9,12,1,12,3,4) #First month to download
l_season <-c(1,1,3,1,1,3) #Length season (1, 2, 3. meses)
m_for <- c(1,1,1,4,4,4) #Month to forecast
l_for <- c(3,3,3,3,3,3) #Length forescast
firs_year <- 1981 #Initial year
last_year <- i+1 #Last year
Map(download_ERSST_CPT,firs_year,last_year,i_month ,l_season ,dir_save,m_for,l_for,area1)
}
data=read.table("clipboard" , header = T)
View(data)
str_split(data$Date,"-")
lapply(str_split(data$Date,"-"),"[[",1) %>% unlist()
lapply(str_split(data$Date,"-"),"[[",1) %>% unlist()
month=lapply(str_split(data$Date,"-"),"[[",2) %>% unlist()
year=lapply(str_split(data$Date,"-"),"[[",1) %>% unlist()
year
month
data$year=lapply(str_split(data$Date,"-"),"[[",1) %>% unlist()
data$month=lapply(str_split(data$Date,"-"),"[[",2) %>% unlist()
data %>% select(-month,-Date)
library("dplyr", lib.loc="~/R/win-library/3.6")
data %>% select(-month,-Date)
data %>% select(-month,-Date) %>% group_by(month)%>% summarise_all(funs(mean))
data %>% select(-year,-Date) %>% group_by(month)%>% summarise_all(funs(mean))
dt=data %>% select(-year,-Date) %>% group_by(month)%>% summarise_all(funs(mean))
barplot(data[,2])
barplot(dt[,2])
dt[,2]
barplot(as.vector(dt[,2]))
as.vector(dt[,2])
as.matrix(dt[,2])
barplot(as.matrix(dt[,2]))
as.vector(dt[,2])
barplot(as.data.frame(dt[,2]))
as.data.frame(dt[,2])
dt=data %>% select(-year,-Date) %>% group_by(month)%>% summarise_all(funs(mean)) %>% as.data.frame(.)
barplot(dt[,2])
barplot(dt[,3])
barplot(dt[,4])
barplot(dt[,4])
barplot(dt[,5])
dt
dim(dt)
length(2009:2016)
length(2009:2018)
main_dir <- "D:/descarga" # Modifique esta línea de acuerdo a su directorio de trabajo
nom_c <- "forecast" # Modifique esta línea con el nombre que desee
dir.create(paste0(main_dir,"/", nom_c,"/input/sst_cfsv2"), recursive = T)
dir.create(paste0(main_dir,"/", nom_c,"/input/stations"), recursive = T)
dir_save <- paste0(main_dir,"/", nom_c,"/input/sst_cfsv2")
# Función para descargar una área de la TSM del modelo CFSv2 --------------
download_CFSV2_CPT_1=function(firs_year,last_year,i_month,ic,dir_save,area1, lg){
lg_s <- lg -1
lead <- i_month-ic
if(lead<0)lead <- lead + 12
route <- paste0("http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP/.EMC/.CFSv2/.ENSEMBLE/.OCNF/.surface/.TMP/SOURCES/.NOAA/.NCEP/.EMC/.CFSv2/.REALTIME_ENSEMBLE/.OCNF/.surface/.TMP/appendstream/350/maskge/S/%280000%201%20",month.abb[ic],"%20",firs_year,"-",last_year,"%29VALUES/L/",lead,".5/",lead+lg_s,".5/RANGE%5BL%5D//keepgrids/average/M/1/24/RANGE%5BM%5Daverage/Y/%28",area1[4],"%29%28",area1[3],"%29RANGEEDGES/X/%28",area1[1],"%29%28",area1[2],"%29RANGEEDGES/-999/setmissing_value/%5BX/Y%5D%5BS/L/add%5Dcptv10.tsv.gz")
trimestrel <- (ic+lead):(ic+lead+lg_s)
if(sum(trimestrel>12)>0)trimestrel[which(trimestrel>12)]=trimestrel[which(trimestrel>12)]-12
path_save <- paste0(dir_save,"/",month.abb[ic],"_",paste(month.abb[trimestrel],collapse = "-"),".tsv.gz")
download.file(route,path_save)
gunzip(path_save)
return(paste("Successful download",path_save))
}
area1 <- c(130,340,-20,35) # Modifique esta línea con el Área a descargar xmin, xmax, ymin, ymax)
i_month <- 1# Modifique esta línea con el Mes de inicio del trimestre de interés
lg <- 3 # Modifique esta línea con el Tamaño de la temporada a descargar. Por ej. AMJ lg=3/ AM lg=2
ic <- 12 # Modifique esta línea con la Condición inicial de la corrida del pronóstico o también conocido como lead time
firs_year <- 1981 # Modifique esta línea con el Año de inicio de la descarga
last_year <- 2020 # Modifique esta línea con el Año de final de la descarga
# Aquí se ejecuta la función con los parámetros dados anteriormente
download_CFSV2_CPT_1(firs_year,last_year,i_month,ic,dir_save,area1,lg=lg)
area1 <- c(130,340,-20,35) # Modifique esta línea con el Área a descargar xmin, xmax, ymin, ymax)
i_month <- 4# Modifique esta línea con el Mes de inicio del trimestre de interés
lg <- 3 # Modifique esta línea con el Tamaño de la temporada a descargar. Por ej. AMJ lg=3/ AM lg=2
ic <- 3 # Modifique esta línea con la Condición inicial de la corrida del pronóstico o también conocido como lead time
firs_year <- 1981 # Modifique esta línea con el Año de inicio de la descarga
last_year <- 2020 # Modifique esta línea con el Año de final de la descarga
# Aquí se ejecuta la función con los parámetros dados anteriormente
download_CFSV2_CPT_1(firs_year,last_year,i_month,ic,dir_save,area1,lg=lg)
i_month <- 4# Modifique esta línea con el Mes de inicio del trimestre de interés
lg <- 3 # Modifique esta línea con el Tamaño de la temporada a descargar. Por ej. AMJ lg=3/ AM lg=2
ic <- 2 # Modifique esta línea con la Condición inicial de la corrida del pronóstico o también conocido como lead time
firs_year <- 1981 # Modifique esta línea con el Año de inicio de la descarga
last_year <- 2020 # Modifique esta línea con el Año de final de la descarga
# Aquí se ejecuta la función con los parámetros dados anteriormente
download_CFSV2_CPT_1(firs_year,last_year,i_month,ic,dir_save,area1,lg=lg)
i_month <- 4# Modifique esta línea con el Mes de inicio del trimestre de interés
lg <- 3 # Modifique esta línea con el Tamaño de la temporada a descargar. Por ej. AMJ lg=3/ AM lg=2
ic <- 12 # Modifique esta línea con la Condición inicial de la corrida del pronóstico o también conocido como lead time
firs_year <- 1981 # Modifique esta línea con el Año de inicio de la descarga
last_year <- 2020 # Modifique esta línea con el Año de final de la descarga
# Aquí se ejecuta la función con los parámetros dados anteriormente
download_CFSV2_CPT_1(firs_year,last_year,i_month,ic,dir_save,area1,lg=lg)
shiny::runApp('D:/git/r-cpt_shiny')
